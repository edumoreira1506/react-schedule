f30cd301e4bb376965c5065b431a283a
"use strict";

var _interopRequireDefault = require("/var/www/html/react-schedule/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = require("react-test-renderer");

var _Schedule = _interopRequireDefault(require("./../components/schedule/Schedule"));

var _jsxFileName = "/var/www/html/react-schedule/src/tests/Schedule.spec.js";
const title = 'TITLE HERE';
const emptyArray = new Array();
const emptyString = '';
const zero = 0;

const makeSchedule = title => {
  return (0, _reactTestRenderer.create)(_react.default.createElement(_Schedule.default, {
    title: title,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11
    },
    __self: void 0
  }));
};

describe('Schedule component', () => {
  const schedule = makeSchedule(title);
  const instance = schedule.getInstance();
  test('Matches the snapshot', () => {
    expect(schedule.toJSON()).toMatchSnapshot();
  });
  test('Title of schedule', () => {
    expect(instance.props.title).toBe(title);
  });
  test('Empty itens on new instace', () => {
    expect(instance.state.items).toStrictEqual(emptyArray);
    expect(instance.state.time).toBe(emptyString);
    expect(instance.state.type).toBe(emptyString);
    expect(instance.state.data).toBe(emptyString);
    expect(instance.state.studiedHours).toBe(zero);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjaGVkdWxlLnNwZWMuanMiXSwibmFtZXMiOlsidGl0bGUiLCJlbXB0eUFycmF5IiwiQXJyYXkiLCJlbXB0eVN0cmluZyIsInplcm8iLCJtYWtlU2NoZWR1bGUiLCJkZXNjcmliZSIsInNjaGVkdWxlIiwiaW5zdGFuY2UiLCJnZXRJbnN0YW5jZSIsInRlc3QiLCJleHBlY3QiLCJ0b0pTT04iLCJ0b01hdGNoU25hcHNob3QiLCJwcm9wcyIsInRvQmUiLCJzdGF0ZSIsIml0ZW1zIiwidG9TdHJpY3RFcXVhbCIsInRpbWUiLCJ0eXBlIiwiZGF0YSIsInN0dWRpZWRIb3VycyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOzs7QUFFQSxNQUFNQSxLQUFLLEdBQUcsWUFBZDtBQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxLQUFKLEVBQW5CO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLEVBQXBCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHLENBQWI7O0FBRUEsTUFBTUMsWUFBWSxHQUFJTCxLQUFELElBQVc7QUFDNUIsU0FBTywrQkFBTyw2QkFBQyxpQkFBRDtBQUFVLElBQUEsS0FBSyxFQUFFQSxLQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFQLENBQVA7QUFDSCxDQUZEOztBQUlBTSxRQUFRLENBQUMsb0JBQUQsRUFBdUIsTUFBTTtBQUNqQyxRQUFNQyxRQUFRLEdBQUdGLFlBQVksQ0FBQ0wsS0FBRCxDQUE3QjtBQUNBLFFBQU1RLFFBQVEsR0FBR0QsUUFBUSxDQUFDRSxXQUFULEVBQWpCO0FBRUFDLEVBQUFBLElBQUksQ0FBQyxzQkFBRCxFQUF5QixNQUFNO0FBQy9CQyxJQUFBQSxNQUFNLENBQUNKLFFBQVEsQ0FBQ0ssTUFBVCxFQUFELENBQU4sQ0FBMEJDLGVBQTFCO0FBQ0gsR0FGRyxDQUFKO0FBSUFILEVBQUFBLElBQUksQ0FBQyxtQkFBRCxFQUFzQixNQUFNO0FBQzVCQyxJQUFBQSxNQUFNLENBQUNILFFBQVEsQ0FBQ00sS0FBVCxDQUFlZCxLQUFoQixDQUFOLENBQTZCZSxJQUE3QixDQUFrQ2YsS0FBbEM7QUFDSCxHQUZHLENBQUo7QUFJQVUsRUFBQUEsSUFBSSxDQUFDLDRCQUFELEVBQStCLE1BQU07QUFDckNDLElBQUFBLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDUSxLQUFULENBQWVDLEtBQWhCLENBQU4sQ0FBNkJDLGFBQTdCLENBQTJDakIsVUFBM0M7QUFDQVUsSUFBQUEsTUFBTSxDQUFDSCxRQUFRLENBQUNRLEtBQVQsQ0FBZUcsSUFBaEIsQ0FBTixDQUE0QkosSUFBNUIsQ0FBaUNaLFdBQWpDO0FBQ0FRLElBQUFBLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDUSxLQUFULENBQWVJLElBQWhCLENBQU4sQ0FBNEJMLElBQTVCLENBQWlDWixXQUFqQztBQUNBUSxJQUFBQSxNQUFNLENBQUNILFFBQVEsQ0FBQ1EsS0FBVCxDQUFlSyxJQUFoQixDQUFOLENBQTRCTixJQUE1QixDQUFpQ1osV0FBakM7QUFDQVEsSUFBQUEsTUFBTSxDQUFDSCxRQUFRLENBQUNRLEtBQVQsQ0FBZU0sWUFBaEIsQ0FBTixDQUFvQ1AsSUFBcEMsQ0FBeUNYLElBQXpDO0FBQ0gsR0FORyxDQUFKO0FBT0gsQ0FuQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInXG5pbXBvcnQgU2NoZWR1bGUgZnJvbSAnLi8uLi9jb21wb25lbnRzL3NjaGVkdWxlL1NjaGVkdWxlJ1xuXG5jb25zdCB0aXRsZSA9ICdUSVRMRSBIRVJFJ1xuY29uc3QgZW1wdHlBcnJheSA9IG5ldyBBcnJheSgpXG5jb25zdCBlbXB0eVN0cmluZyA9ICcnXG5jb25zdCB6ZXJvID0gMFxuXG5jb25zdCBtYWtlU2NoZWR1bGUgPSAodGl0bGUpID0+IHtcbiAgICByZXR1cm4gY3JlYXRlKDxTY2hlZHVsZSB0aXRsZT17dGl0bGV9IC8+KVxufVxuXG5kZXNjcmliZSgnU2NoZWR1bGUgY29tcG9uZW50JywgKCkgPT4ge1xuICAgIGNvbnN0IHNjaGVkdWxlID0gbWFrZVNjaGVkdWxlKHRpdGxlKVxuICAgIGNvbnN0IGluc3RhbmNlID0gc2NoZWR1bGUuZ2V0SW5zdGFuY2UoKVxuXG4gICAgdGVzdCgnTWF0Y2hlcyB0aGUgc25hcHNob3QnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChzY2hlZHVsZS50b0pTT04oKSkudG9NYXRjaFNuYXBzaG90KClcbiAgICB9KVxuXG4gICAgdGVzdCgnVGl0bGUgb2Ygc2NoZWR1bGUnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChpbnN0YW5jZS5wcm9wcy50aXRsZSkudG9CZSh0aXRsZSlcbiAgICB9KVxuXG4gICAgdGVzdCgnRW1wdHkgaXRlbnMgb24gbmV3IGluc3RhY2UnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS5pdGVtcykudG9TdHJpY3RFcXVhbChlbXB0eUFycmF5KVxuICAgICAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUudGltZSkudG9CZShlbXB0eVN0cmluZylcbiAgICAgICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLnR5cGUpLnRvQmUoZW1wdHlTdHJpbmcpXG4gICAgICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS5kYXRhKS50b0JlKGVtcHR5U3RyaW5nKVxuICAgICAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUuc3R1ZGllZEhvdXJzKS50b0JlKHplcm8pXG4gICAgfSlcbn0pIl19