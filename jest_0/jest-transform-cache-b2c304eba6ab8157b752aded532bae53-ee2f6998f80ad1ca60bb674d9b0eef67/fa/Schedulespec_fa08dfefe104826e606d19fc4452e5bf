edf895c331ff1b28e0a3d4d81eb164ce
"use strict";

var _interopRequireDefault = require("/var/www/html/react-schedule/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = require("react-test-renderer");

var _Schedule = _interopRequireDefault(require("./../components/schedule/Schedule"));

var _jsxFileName = "/var/www/html/react-schedule/src/tests/Schedule.spec.js";
const title = 'TITLE HERE';
const emptyArray = new Array();
const emptyString = '';
const zero = 0;

const makeSchedule = title => {
  return (0, _reactTestRenderer.create)(_react.default.createElement(_Schedule.default, {
    title: title,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 11
    },
    __self: void 0
  }));
};

describe('Schedule component', () => {
  const schedule = makeSchedule(title);
  const instance = schedule.getInstance();
  test('Matches the snapshot', () => {
    expect(schedule.toJSON()).toMatchSnapshot();
  });
  test('Title of schedule', () => {
    expect(instance.props.title).toBe(title);
  });
  test('Empty itens on new instace', () => {
    expect(instance.state.items).toStrictEqual(emptyArray);
    expect(instance.state.time).toBe(emptyString);
    expect(instance.state.type).toBe(emptyString);
    expect(instance.state.date).toBe(emptyString);
    expect(instance.state.studiedHours).toBe(zero);
  });
  test('Blocking the creation of new item with any field empty', () => {
    instance.state.time = 1;
    instance.state.date = '15/06/2000';
    instance.addItem();
    expect(instance.state.items).toStrictEqual(emptyArray);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjaGVkdWxlLnNwZWMuanMiXSwibmFtZXMiOlsidGl0bGUiLCJlbXB0eUFycmF5IiwiQXJyYXkiLCJlbXB0eVN0cmluZyIsInplcm8iLCJtYWtlU2NoZWR1bGUiLCJkZXNjcmliZSIsInNjaGVkdWxlIiwiaW5zdGFuY2UiLCJnZXRJbnN0YW5jZSIsInRlc3QiLCJleHBlY3QiLCJ0b0pTT04iLCJ0b01hdGNoU25hcHNob3QiLCJwcm9wcyIsInRvQmUiLCJzdGF0ZSIsIml0ZW1zIiwidG9TdHJpY3RFcXVhbCIsInRpbWUiLCJ0eXBlIiwiZGF0ZSIsInN0dWRpZWRIb3VycyIsImFkZEl0ZW0iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7O0FBRUEsTUFBTUEsS0FBSyxHQUFHLFlBQWQ7QUFDQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUMsS0FBSixFQUFuQjtBQUNBLE1BQU1DLFdBQVcsR0FBRyxFQUFwQjtBQUNBLE1BQU1DLElBQUksR0FBRyxDQUFiOztBQUVBLE1BQU1DLFlBQVksR0FBSUwsS0FBRCxJQUFXO0FBQzVCLFNBQU8sK0JBQU8sNkJBQUMsaUJBQUQ7QUFBVSxJQUFBLEtBQUssRUFBRUEsS0FBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBUCxDQUFQO0FBQ0gsQ0FGRDs7QUFJQU0sUUFBUSxDQUFDLG9CQUFELEVBQXVCLE1BQU07QUFDakMsUUFBTUMsUUFBUSxHQUFHRixZQUFZLENBQUNMLEtBQUQsQ0FBN0I7QUFDQSxRQUFNUSxRQUFRLEdBQUdELFFBQVEsQ0FBQ0UsV0FBVCxFQUFqQjtBQUVBQyxFQUFBQSxJQUFJLENBQUMsc0JBQUQsRUFBeUIsTUFBTTtBQUMvQkMsSUFBQUEsTUFBTSxDQUFDSixRQUFRLENBQUNLLE1BQVQsRUFBRCxDQUFOLENBQTBCQyxlQUExQjtBQUNILEdBRkcsQ0FBSjtBQUlBSCxFQUFBQSxJQUFJLENBQUMsbUJBQUQsRUFBc0IsTUFBTTtBQUM1QkMsSUFBQUEsTUFBTSxDQUFDSCxRQUFRLENBQUNNLEtBQVQsQ0FBZWQsS0FBaEIsQ0FBTixDQUE2QmUsSUFBN0IsQ0FBa0NmLEtBQWxDO0FBQ0gsR0FGRyxDQUFKO0FBSUFVLEVBQUFBLElBQUksQ0FBQyw0QkFBRCxFQUErQixNQUFNO0FBQ3JDQyxJQUFBQSxNQUFNLENBQUNILFFBQVEsQ0FBQ1EsS0FBVCxDQUFlQyxLQUFoQixDQUFOLENBQTZCQyxhQUE3QixDQUEyQ2pCLFVBQTNDO0FBQ0FVLElBQUFBLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDUSxLQUFULENBQWVHLElBQWhCLENBQU4sQ0FBNEJKLElBQTVCLENBQWlDWixXQUFqQztBQUNBUSxJQUFBQSxNQUFNLENBQUNILFFBQVEsQ0FBQ1EsS0FBVCxDQUFlSSxJQUFoQixDQUFOLENBQTRCTCxJQUE1QixDQUFpQ1osV0FBakM7QUFDQVEsSUFBQUEsTUFBTSxDQUFDSCxRQUFRLENBQUNRLEtBQVQsQ0FBZUssSUFBaEIsQ0FBTixDQUE0Qk4sSUFBNUIsQ0FBaUNaLFdBQWpDO0FBQ0FRLElBQUFBLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDUSxLQUFULENBQWVNLFlBQWhCLENBQU4sQ0FBb0NQLElBQXBDLENBQXlDWCxJQUF6QztBQUNILEdBTkcsQ0FBSjtBQVFBTSxFQUFBQSxJQUFJLENBQUMsd0RBQUQsRUFBMkQsTUFBTTtBQUNqRUYsSUFBQUEsUUFBUSxDQUFDUSxLQUFULENBQWVHLElBQWYsR0FBc0IsQ0FBdEI7QUFDQVgsSUFBQUEsUUFBUSxDQUFDUSxLQUFULENBQWVLLElBQWYsR0FBc0IsWUFBdEI7QUFDQWIsSUFBQUEsUUFBUSxDQUFDZSxPQUFUO0FBQ0FaLElBQUFBLE1BQU0sQ0FBQ0gsUUFBUSxDQUFDUSxLQUFULENBQWVDLEtBQWhCLENBQU4sQ0FBNkJDLGFBQTdCLENBQTJDakIsVUFBM0M7QUFDSCxHQUxHLENBQUo7QUFNSCxDQTFCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAncmVhY3QtdGVzdC1yZW5kZXJlcidcbmltcG9ydCBTY2hlZHVsZSBmcm9tICcuLy4uL2NvbXBvbmVudHMvc2NoZWR1bGUvU2NoZWR1bGUnXG5cbmNvbnN0IHRpdGxlID0gJ1RJVExFIEhFUkUnXG5jb25zdCBlbXB0eUFycmF5ID0gbmV3IEFycmF5KClcbmNvbnN0IGVtcHR5U3RyaW5nID0gJydcbmNvbnN0IHplcm8gPSAwXG5cbmNvbnN0IG1ha2VTY2hlZHVsZSA9ICh0aXRsZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGUoPFNjaGVkdWxlIHRpdGxlPXt0aXRsZX0gLz4pXG59XG5cbmRlc2NyaWJlKCdTY2hlZHVsZSBjb21wb25lbnQnLCAoKSA9PiB7XG4gICAgY29uc3Qgc2NoZWR1bGUgPSBtYWtlU2NoZWR1bGUodGl0bGUpXG4gICAgY29uc3QgaW5zdGFuY2UgPSBzY2hlZHVsZS5nZXRJbnN0YW5jZSgpXG5cbiAgICB0ZXN0KCdNYXRjaGVzIHRoZSBzbmFwc2hvdCcsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KHNjaGVkdWxlLnRvSlNPTigpKS50b01hdGNoU25hcHNob3QoKVxuICAgIH0pXG5cbiAgICB0ZXN0KCdUaXRsZSBvZiBzY2hlZHVsZScsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGluc3RhbmNlLnByb3BzLnRpdGxlKS50b0JlKHRpdGxlKVxuICAgIH0pXG5cbiAgICB0ZXN0KCdFbXB0eSBpdGVucyBvbiBuZXcgaW5zdGFjZScsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLml0ZW1zKS50b1N0cmljdEVxdWFsKGVtcHR5QXJyYXkpXG4gICAgICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS50aW1lKS50b0JlKGVtcHR5U3RyaW5nKVxuICAgICAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUudHlwZSkudG9CZShlbXB0eVN0cmluZylcbiAgICAgICAgZXhwZWN0KGluc3RhbmNlLnN0YXRlLmRhdGUpLnRvQmUoZW1wdHlTdHJpbmcpXG4gICAgICAgIGV4cGVjdChpbnN0YW5jZS5zdGF0ZS5zdHVkaWVkSG91cnMpLnRvQmUoemVybylcbiAgICB9KVxuXG4gICAgdGVzdCgnQmxvY2tpbmcgdGhlIGNyZWF0aW9uIG9mIG5ldyBpdGVtIHdpdGggYW55IGZpZWxkIGVtcHR5JywgKCkgPT4ge1xuICAgICAgICBpbnN0YW5jZS5zdGF0ZS50aW1lID0gMVxuICAgICAgICBpbnN0YW5jZS5zdGF0ZS5kYXRlID0gJzE1LzA2LzIwMDAnXG4gICAgICAgIGluc3RhbmNlLmFkZEl0ZW0oKVxuICAgICAgICBleHBlY3QoaW5zdGFuY2Uuc3RhdGUuaXRlbXMpLnRvU3RyaWN0RXF1YWwoZW1wdHlBcnJheSk7XG4gICAgfSlcbn0pIl19