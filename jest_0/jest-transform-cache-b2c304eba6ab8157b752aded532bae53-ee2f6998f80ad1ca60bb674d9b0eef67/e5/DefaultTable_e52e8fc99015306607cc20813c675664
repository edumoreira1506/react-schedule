afc3f0b6277fcdd504fb9f1aa0452a58
"use strict";

var _interopRequireWildcard = require("/var/www/html/react-schedule/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/var/www/html/react-schedule/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Row = _interopRequireDefault(require("./Row"));

require("./../schedule/Schedule.css");

require("./../../index.css");

var _jsxFileName = "/var/www/html/react-schedule/src/components/table/DefaultTable.js";

class DefaultTable extends _react.Component {
  constructor(...args) {
    super(...args);

    this.makeElementsHead = arrayItems => {
      const elementsHead = [];

      for (let i in arrayItems) {
        elementsHead.push(_react.default.createElement("td", {
          key: i,
          className: "Cell-row",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 13
          },
          __self: this
        }, arrayItems[i]));
      }

      return elementsHead;
    };

    this.makeElementsBody = (arrayItems, onClick) => {
      const elements = [];

      for (let i in arrayItems) {
        const fields = [];

        for (let j in arrayItems[i]) {
          fields.push(arrayItems[i][j]);
        }

        elements.push(_react.default.createElement(_Row.default, {
          key: i,
          onClick: onClick,
          items: fields,
          index: i,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 29
          },
          __self: this
        }));
      }

      return elements;
    };
  }

  render() {
    const elementsHead = this.makeElementsHead(this.props.itemsHead);
    const elementsBody = this.makeElementsBody(this.props.items, this.props.onClick);
    return _react.default.createElement("table", {
      className: "Schedule-table",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40
      },
      __self: this
    }, _react.default.createElement("thead", {
      className: "Schedule-table-thead transition",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 41
      },
      __self: this
    }, _react.default.createElement("tr", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 42
      },
      __self: this
    }, elementsHead)), _react.default.createElement("tbody", {
      className: "Schedule-table-tbody",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 44
      },
      __self: this
    }, elementsBody));
  }

}

var _default = DefaultTable;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlZmF1bHRUYWJsZS5qcyJdLCJuYW1lcyI6WyJEZWZhdWx0VGFibGUiLCJDb21wb25lbnQiLCJtYWtlRWxlbWVudHNIZWFkIiwiYXJyYXlJdGVtcyIsImVsZW1lbnRzSGVhZCIsImkiLCJwdXNoIiwibWFrZUVsZW1lbnRzQm9keSIsIm9uQ2xpY2siLCJlbGVtZW50cyIsImZpZWxkcyIsImoiLCJyZW5kZXIiLCJwcm9wcyIsIml0ZW1zSGVhZCIsImVsZW1lbnRzQm9keSIsIml0ZW1zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRUEsTUFBTUEsWUFBTixTQUEyQkMsZ0JBQTNCLENBQXFDO0FBQUE7QUFBQTs7QUFBQSxTQUVqQ0MsZ0JBRmlDLEdBRWJDLFVBQUQsSUFBZ0I7QUFDL0IsWUFBTUMsWUFBWSxHQUFHLEVBQXJCOztBQUVBLFdBQUksSUFBSUMsQ0FBUixJQUFhRixVQUFiLEVBQXdCO0FBQ3BCQyxRQUFBQSxZQUFZLENBQUNFLElBQWIsQ0FBa0I7QUFBSSxVQUFBLEdBQUcsRUFBRUQsQ0FBVDtBQUFZLFVBQUEsU0FBUyxFQUFDLFVBQXRCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBQWtDRixVQUFVLENBQUNFLENBQUQsQ0FBNUMsQ0FBbEI7QUFDSDs7QUFFRCxhQUFPRCxZQUFQO0FBQ0gsS0FWZ0M7O0FBQUEsU0FZakNHLGdCQVppQyxHQVlkLENBQUNKLFVBQUQsRUFBYUssT0FBYixLQUF5QjtBQUN4QyxZQUFNQyxRQUFRLEdBQUcsRUFBakI7O0FBRUEsV0FBSSxJQUFJSixDQUFSLElBQWFGLFVBQWIsRUFBd0I7QUFDcEIsY0FBTU8sTUFBTSxHQUFHLEVBQWY7O0FBRUEsYUFBSSxJQUFJQyxDQUFSLElBQWFSLFVBQVUsQ0FBQ0UsQ0FBRCxDQUF2QixFQUEyQjtBQUN2QkssVUFBQUEsTUFBTSxDQUFDSixJQUFQLENBQVlILFVBQVUsQ0FBQ0UsQ0FBRCxDQUFWLENBQWNNLENBQWQsQ0FBWjtBQUNIOztBQUVERixRQUFBQSxRQUFRLENBQUNILElBQVQsQ0FBYyw2QkFBQyxZQUFEO0FBQUssVUFBQSxHQUFHLEVBQUVELENBQVY7QUFBYSxVQUFBLE9BQU8sRUFBRUcsT0FBdEI7QUFBK0IsVUFBQSxLQUFLLEVBQUVFLE1BQXRDO0FBQThDLFVBQUEsS0FBSyxFQUFFTCxDQUFyRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQUFkO0FBQ0g7O0FBRUQsYUFBT0ksUUFBUDtBQUNILEtBMUJnQztBQUFBOztBQTRCakNHLEVBQUFBLE1BQU0sR0FBRztBQUNMLFVBQU1SLFlBQVksR0FBRyxLQUFLRixnQkFBTCxDQUFzQixLQUFLVyxLQUFMLENBQVdDLFNBQWpDLENBQXJCO0FBQ0EsVUFBTUMsWUFBWSxHQUFHLEtBQUtSLGdCQUFMLENBQXNCLEtBQUtNLEtBQUwsQ0FBV0csS0FBakMsRUFBd0MsS0FBS0gsS0FBTCxDQUFXTCxPQUFuRCxDQUFyQjtBQUVBLFdBQ0k7QUFBTyxNQUFBLFNBQVMsRUFBQyxnQkFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FDSTtBQUFPLE1BQUEsU0FBUyxFQUFDLGlDQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUNJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUtKLFlBQUwsQ0FESixDQURKLEVBSUk7QUFBTyxNQUFBLFNBQVMsRUFBQyxzQkFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBeUNXLFlBQXpDLENBSkosQ0FESjtBQVFIOztBQXhDZ0M7O2VBMkN0QmYsWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBSb3cgZnJvbSAnLi9Sb3cnXG5cbmltcG9ydCAnLi8uLi9zY2hlZHVsZS9TY2hlZHVsZS5jc3MnXG5pbXBvcnQgJy4vLi4vLi4vaW5kZXguY3NzJ1xuXG5jbGFzcyBEZWZhdWx0VGFibGUgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgbWFrZUVsZW1lbnRzSGVhZCA9IChhcnJheUl0ZW1zKSA9PiB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzSGVhZCA9IFtdXG4gICAgXG4gICAgICAgIGZvcihsZXQgaSBpbiBhcnJheUl0ZW1zKXtcbiAgICAgICAgICAgIGVsZW1lbnRzSGVhZC5wdXNoKDx0ZCBrZXk9e2l9IGNsYXNzTmFtZT1cIkNlbGwtcm93XCI+e2FycmF5SXRlbXNbaV19PC90ZD4pXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzSGVhZFxuICAgIH1cbiAgICBcbiAgICBtYWtlRWxlbWVudHNCb2R5ID0gKGFycmF5SXRlbXMsIG9uQ2xpY2spID0+IHtcbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBbXVxuICAgIFxuICAgICAgICBmb3IobGV0IGkgaW4gYXJyYXlJdGVtcyl7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSBbXVxuICAgIFxuICAgICAgICAgICAgZm9yKGxldCBqIGluIGFycmF5SXRlbXNbaV0pe1xuICAgICAgICAgICAgICAgIGZpZWxkcy5wdXNoKGFycmF5SXRlbXNbaV1bal0pXG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBlbGVtZW50cy5wdXNoKDxSb3cga2V5PXtpfSBvbkNsaWNrPXtvbkNsaWNrfSBpdGVtcz17ZmllbGRzfSBpbmRleD17aX0gLz4pXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBlbGVtZW50c0hlYWQgPSB0aGlzLm1ha2VFbGVtZW50c0hlYWQodGhpcy5wcm9wcy5pdGVtc0hlYWQpXG4gICAgICAgIGNvbnN0IGVsZW1lbnRzQm9keSA9IHRoaXMubWFrZUVsZW1lbnRzQm9keSh0aGlzLnByb3BzLml0ZW1zLCB0aGlzLnByb3BzLm9uQ2xpY2spXG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJTY2hlZHVsZS10YWJsZVwiPlxuICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJTY2hlZHVsZS10YWJsZS10aGVhZCB0cmFuc2l0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDx0cj57ZWxlbWVudHNIZWFkfTwvdHI+XG4gICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3NOYW1lPVwiU2NoZWR1bGUtdGFibGUtdGJvZHlcIj57ZWxlbWVudHNCb2R5fTwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEZWZhdWx0VGFibGVcbiJdfQ==